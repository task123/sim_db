CC = cc
CXX = c++
CFLAGS_DEBUG = -std=c99 -Wall -Wextra -Wfloat-equal
CFLAGS_RELEASE = -std=c99 -O3 -DNDEBUG
CXXFLAGS_DEBUG = -Wall -Wextra 
CXXFLAGS_RELEASE = -O3 -DNDEBUG
CFLAGS = $(CFLAGS_DEBUG)
CXXFLAGS = $(CXXFLAGS_DEBUG)
LDFLAGS = -lm -lpthread -ldl

PATH_SIM_DB := $(if $(PATH_SIM_DB), $(PATH_SIM_DB), "..")

export CC CXX CFLAGS CXXFLAGS

.PHONY: all c_program_updated cpp_program_updated clean clean_except_third_party clean_etp

all:
	$(MAKE) -f handwritten_makefile c_program_updated
	$(MAKE) -f handwritten_makefile cpp_program_updated
	$(MAKE) -f handwritten_makefile c_mtap_updated

c_program_updated:
	$(MAKE) -f handwritten_makefile -C ../lib libsimdbc.a
	$(MAKE) -f handwritten_makefile c_program
	
cpp_program_updated:
	$(MAKE) -f handwritten_makefile -C ../lib libsimdbcpp.a
	$(MAKE) -f handwritten_makefile cpp_program

c_mtap_updated:
	$(MAKE) -f handwritten_makefile c_program_updated
	$(MAKE) -f handwritten_makefile c_mtap

# Use target c_program_updated instead as it check libsimdbc.a's dependencies.
c_program: program.c ../lib/libsimdbc.a
	$(CC) $(CFLAGS) -o c_program -I../include program.c -L../lib -lsimdbc $(LDFLAGS) 

# Use target cpp_program_updated instead as it check libsimdbcpp.a's dependencies.
cpp_program: program.cpp ../lib/libsimdbcpp.a
	$(CXX) $(CXXFLAGS) -o cpp_program -I../include program.cpp -L../lib -lsimdbcpp $(LDFLAGS)

# Use target c_mtap_updated instead as it check libsimdbc.a's dependencies.
c_mtap: multithreading_and_processing.c ../lib/libsimdbc.a
	$(CC) $(CFLAGS) -o c_mtap multithreading_and_processing.c -I../include -L../lib -lsimdbc $(LDFLAGS)

c_program_run: c_program_updated
	./c_program --id ${ID} --path_proj_root ${PATH_SIM_DB}

cpp_program_run: cpp_program_updated
	./cpp_program --id ${ID} --path_proj_root ${PATH_SIM_DB}

c_mtap_run: c_mtap_updated
	./c_mtap

clean:
	rm -f c_program
	rm -f cpp_program
	rm -f c_mtap
	rm -fr c_program.dSYM
	rm -fr cpp_program.dSYM
	rm -fr c_mtap.dSYM
	rm -fr results/*
	$(MAKE) -f handwritten_makefile -C ../lib clean

clean_except_third_party:
	rm -f c_program
	rm -f cpp_program
	rm -f c_mtap
	rm -fr c_program.dSYM
	rm -fr cpp_program.dSYM
	rm -fr c_mtap.dSYM
	rm -fr results/*
	$(MAKE) -f handwritten_makefile -C ../lib clean_except_third_party

clean_etp:
	$(MAKE) -f handwritten_makefile clean_except_third_party
